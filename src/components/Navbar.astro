---
// src/components/NavBar.astro
import Logo from "../assets/images/Group.svg";
import FlagUzb from "../assets/images/FlagUzb.svg";
import FlagRus from "../assets/images/Flag_of_Russia.svg.webp";
import FlagEng from "../assets/images/english_flag.png";
import ToggleTheme from "./ToggleTheme.jsx";

const currentPath = Astro.url.pathname;
---

<nav
  client:load
  class="sticky top-0 left-0 right-0 z-50 bg-white dark:bg-[#0D0D0D] border border-[#EBEBEB] dark:border-[#535862] container mx-auto shadow-sm py-[15px] px-[38px] rounded-tl-3xl rounded-br-3xl"
>
  <div class="w-full flex justify-between items-center h-16">
    <!-- Logo -->
    <div class="flex items-center space-x-2">
      <img src={Logo.src} alt="Yoshlar Ventures" class="h-8 w-auto" />
      <span
        class="font-bold text-xs sm:text-sm text-black dark:text-white font-inter-tight"
      >
        YOSHLAR<br />VENTURES
      </span>
    </div>

    <!-- Desktop Menu -->
    <div class="hidden lg:flex space-x-6 text-sm font-medium">
      {
        [
          { href: "/", label: "Asosiy" },
          { href: "/about", label: "Biz haqimizda" },
          { href: "/events", label: "Tadbirlar" },
          { href: "/portfolio", label: "Startuplar" },
          { href: "/partners", label: "Hamkorlar" },
          { href: "/blog", label: "Youtube blog" },
          { href: "/contact", label: "Kontaktlar" },
        ].map(({ href, label }) => (
          <a
            href={href}
            class="relative px-[14px] py-[6px] rounded-lg transition duration-300 group"
          >
            <span
              class={`relative z-10 font-medium bg-clip-text transition-colors
              group-hover:text-transparent group-hover:bg-gradient-to-r
              group-hover:from-[#F9B513] group-hover:to-[#EA601E]
              ${
                currentPath === href
                  ? "text-transparent bg-gradient-to-r from-[#F9B513] to-[#EA601E]"
                  : "text-[#535862] dark:text-white"
              }`}
            >
              {label}
            </span>
            <span
              class={`absolute inset-0 rounded-lg transition-colors
              group-hover:bg-[#FFF1E6]
              ${currentPath === href ? "bg-[#FFF1E6]" : ""}`}
            />
          </a>
        ))
      }
    </div>

    <!-- Language & Controls -->
    <div class="flex items-center space-x-2">
      <!-- Language Selector -->
      <div class="relative inline-block">
        <button
          id="languageButton"
          on:click={() =>
            document
              .getElementById("languageDropdown")
              .classList.toggle("hidden")}
          class="flex items-center justify-between min-w-[80px] px-2 py-1 rounded font-inter-tight text-sm border border-gray-300 dark:border-gray-700 hover:border-gray-400 transition"
        >
          <div class="flex items-center space-x-2">
            <img
              id="selectedFlag"
              src={FlagUzb.src}
              alt="UZB"
              class="w-4 h-3"
            />
            <span id="selectedText">O'zb</span>
          </div>
          <svg
            class="w-3 h-3"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div
          id="languageDropdown"
          class="hidden absolute top-full left-0 mt-1 w-full bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded shadow-lg z-10"
        >
          {
            [
              { code: "uz", flag: FlagUzb.src, label: "O'zb" },
              { code: "ru", flag: FlagRus.src, label: "Рус" },
              { code: "en", flag: FlagEng.src, label: "Eng" },
            ].map((lang) => (
              <button
                class="w-full px-2 py-1 flex items-center space-x-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 transition"
                on:click={() =>
                  selectLanguage(lang.code, lang.flag, lang.label)
                }
              >
                <img
                  src={lang.flag}
                  alt={lang.code.toUpperCase()}
                  class="w-4 h-3"
                />
                <span>{lang.label}</span>
              </button>
            ))
          }
        </div>
      </div>

      <!-- Dark Mode Toggle -->
      <ToggleTheme client:load />

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="lg:hidden p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 transition relative"
      >
        <svg
          id="menu-icon"
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <svg
          id="close-icon"
          class="w-6 h-6 hidden"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div
    id="mobile-menu"
    class="lg:hidden absolute left-0 right-0 top-full bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 transform -translate-y-full opacity-0 scale-y-0 origin-top transition-all duration-150 ease-in-out"
  >
    <div class="px-4 py-2 space-y-1">
      {
        [
          "Asosiy",
          "Biz haqimizda",
          "Tadbirlar",
          "Startuplar",
          "Hamkorlar",
          "Youtube blog",
          "Kontaktlar",
        ].map((label, i) => (
          <a
            href={
              [
                "/",
                "/about",
                "/events",
                "/portfolio",
                "/partners",
                "/blog",
                "/contact",
              ][i]
            }
            class="block text-[#535862] dark:text-white font-medium text-[20px] px-4 py-3 rounded-lg hover:bg-[#FFF1E6] hover:text-transparent hover:bg-clip-text hover:bg-gradient-to-r hover:from-[#F9B513] hover:to-[#EA601E] transition"
          >
            {label}
          </a>
        ))
      }
    </div>
  </div>
</nav>

<script is:inline>
  function selectLanguage(code, flagSrc, label) {
    document.getElementById("selectedFlag").src = flagSrc;
    document.getElementById("selectedText").textContent = label;
    document.getElementById("languageDropdown").classList.add("hidden");
  }
  document.addEventListener("DOMContentLoaded", () => {
    const mobileBtn = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuIcon = document.getElementById("menu-icon");
    const closeIcon = document.getElementById("close-icon");
    let isOpen = false;
    mobileBtn.addEventListener("click", () => {
      isOpen = !isOpen;
      if (isOpen) {
        mobileMenu.classList.remove(
          "-translate-y-full",
          "opacity-0",
          "scale-y-0"
        );
        mobileMenu.classList.add("translate-y-0", "opacity-100", "scale-y-100");
        menuIcon.classList.add("hidden");
        closeIcon.classList.remove("hidden");
      } else {
        mobileMenu.classList.remove(
          "translate-y-0",
          "opacity-100",
          "scale-y-100"
        );
        mobileMenu.classList.add("-translate-y-full", "opacity-0", "scale-y-0");
        menuIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      }
    });
    document.addEventListener("click", (e) => {
      if (
        !mobileBtn.contains(e.target) &&
        !mobileMenu.contains(e.target) &&
        isOpen
      ) {
        isOpen = false;
        mobileMenu.classList.remove(
          "translate-y-0",
          "opacity-100",
          "scale-y-100"
        );
        mobileMenu.classList.add("-translate-y-full", "opacity-0", "scale-y-0");
        menuIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      }
    });
  });
</script>
